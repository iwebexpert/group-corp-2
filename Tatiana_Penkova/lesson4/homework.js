//Задание № 1

let tempCel = prompt('Сколько градусов в цельсиях?', 100);
const tempFar = (9 / 5) * tempCel + 32;
alert(`Это ${tempFar} градусов по Фарингейту `);

//Задание №2

let admin;
let name = 'Василий';
admin = name;
console.log(admin);

//Задание №3

let sum = 1000 + "108";
console.log(sum);

/*
Результатом такого выражения будет '1000108' из - за того, что в JavaScript при сложении строк, если хоть один из операндов будет строкой, то второй будет также преобразован к строке. Для того, чтобы в данном примере сложить числа (т.е. преобразовать сроку к числу) необходимо использовать бинарный плюс перед строкой как в примере ниже с sum1, либо использовать let sum1 = 1000 + Number("108"), что является одним и тем же, просто с бинарным плюсом запись короче.
*/

let sum1 = 1000 + +"108";
console.log(sum1);

//Задание №4

/*
Атрибут defer сообщает браузеру, что он должен запустить скрипт после загрузки всей страницы (когда дерево DOM готово, но до события DOMContentLoaded), при чем в порядке подключения, но загружатся браузером они будут параллельно в целях увеличения производительности. И даже если первым загрузился скрипт более маленького размера, который идет по списку вторым, он будет ждать загрузки и выполнения первого (и так по очереди).

Атрибут async говорит браузеру, что скрипты независимы друг от друга, содержимое страницы обрабатывается и отображается сразу, а событие DOMContentLoaded может произойти как до асинхронного скрипта, так и после. Если подключены несколько асинхронных скриптов, они будут выполнятся в любом порядке - какое первое загрузилось, то и первым запускается.
*/

